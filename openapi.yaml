openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://localhost/api
    description: Optional server description, e.g. Internal staging server for testing
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
paths:
  /users:
    get:
      operationId: getAllUsers
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    # status code
          description: A JSON array of user objects
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user/{id}:
    get:
      operationId: getOneUser
      summary: Returns a user.
      responses:
        '200':
          description: A JSON object of user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      parameters:
        - name: id
          in: path
          description: Id of a User
          required: true
          schema:
            type: integer
            format: int64
    delete:
      operationId: deleteOneUser
      summary: Deletes a user.
      responses:
        '200':
          description: A JSON object of deleted user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      parameters:
        - name: id
          in: path
          description: Id of a User
          required: true
          schema:
            type: integer
            format: int64
  /user:
    post:
      operationId: saveUser
      summary: Saves a user.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '201':
          description: A JSON object of saved user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        content:
          application/json:
            schema: 
                $ref: '#/components/schemas/User'
        required: true
    put:
      operationId: updateUser
      summary: Updates a user properties.
      responses:
        '201':
          description: A JSON object of updated properties.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        content:
          application/json:
            schema: 
                $ref: '#/components/schemas/User'
        required: true





components:
  schemas:
    User:
      title: User
      description: A simple user model.
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        roles:
          type: array
          items: 
            type: string
        password:
          type: string
      type: object